name: statements
categories:
- statements
tests:

- name: load
  categories:
  - load
  tests:
  - script: 'load test'
    result:
      _class: Load
      to_load:
        _class: SpecialReference
        value: ALL
      from_dialect: 'test'
      into: 'test'
  - script: 'load test, test2'
    result:
    - _class: Load
      to_load:
        _class: SpecialReference
        value: ALL
      from_dialect: 'test'
      into: 'test'
    - _class: Load
      to_load:
        _class: SpecialReference
        value: ALL
      from_dialect: 'test2'
      into: 'test2'
  - script: 'load test into alias'
    result:
      _class: Load
      to_load:
        _class: SpecialReference
        value: ALL
      from_dialect: 'test'
      into: 'alias'
  - script: 'load test, test_two into ~'
    result:
    - _class: Load
      to_load:
        _class: SpecialReference
        value: ALL
      from_dialect: 'test'
      into:
        _class: SpecialReference
        value: ROOT
    - _class: Load
      to_load:
        _class: SpecialReference
        value: ALL
      from_dialect: 'test_two'
      into:
        _class: SpecialReference
        value: ROOT
  - script: 'load * from test'
    result:
      _class: Load
      to_load:
        _class: SpecialReference
        value: ALL
      from_dialect: 'test'
      into:
        _class: SpecialReference
        value: ROOT
  - script: 'load test, test2 from dialect_name'
    result:
    - _class: Load
      to_load:
      - 'test'
      - 'test2'
      from_dialect: 'dialect_name'
      into:
        _class: SpecialReference
        value: ROOT
  - script: 'load test from dialect_name into alias'
    result:
      _class: Load
      to_load:
      - 'test'
      from_dialect: 'dialect_name'
      into: 'alias'
  - script: 'load test, test_two from dialect_info into ~'
    result:
      _class: Load
      to_load:
      - 'test'
      - 'test_two'
      from_dialect: 'dialect_info'
      into:
        _class: SpecialReference
        value: ROOT

- name: assignment
  categories:
  - assignment
  tests:
  - script: 'name = 1'
    result:
      _class: Assignment
      target: name
      value: 1
  - script: 'name += 1'
    result:
      _class: Assignment
      target: 'name'
      value:
        _class: Math
        left: 'name'
        op: '+'
        right: 1
  - script: 'name -= 1'
    result:
      _class: Assignment
      target: 'name'
      value:
        _class: Math
        left: 'name'
        op: '-'
        right: 1
  - script: 'name /= 1'
    result:
      _class: Assignment
      target: 'name'
      value:
        _class: Math
        left: 'name'
        op: '/'
        right: 1
  - script: 'name //= 1'
    result:
      _class: Assignment
      target: 'name'
      value:
        _class: Math
        left: 'name'
        op: '//'
        right: 1
  - script: 'name %= 1'
    result:
      _class: Assignment
      target: 'name'
      value:
        _class: Math
        left: 'name'
        op: '%'
        right: 1
  - script: 'name &= 1'
    result:
      _class: Assignment
      target: 'name'
      value:
        _class: RollMath
        left: 'name'
        op: '&'
        right: 1
  - script: 'name ^= 1'
    result:
      _class: Assignment
      target: 'name'
      value:
        _class: RollMath
        left: name
        op: '^'
        right: 1
  - script: '?{1} = 3'
    result:
      _class: Assignment
      target:
        _class: Access
        accessing:
          _class: SpecialReference
          value: SUBJECT
        accessors:
        - _class: Reduce
          value: 1
      value: 3
  - script: 'name = 1d6'
    result:
      _class: Assignment
      target: name
      value:
        _class: Dice
        number_of_dice: 1
        sides: 6
  - script: 'name = {2}'
    result:
      _class: Assignment
      target: name
      value:
        _class: Reduce
        value: 2
  - script: 'name = {@}'
    result:
      _class: Assignment
      target: name
      value:
        _class: Enlarge
        size: null
        value: null
  - script: 'name = {1d6@(3d4 + 5)}'
    result:
      _class: Assignment
      target: name
      value:
        _class: Enlarge
        size:
          _class: Dice
          number_of_dice: 1
          sides: 6
        value:
          _class: Math
          left:
            _class: Dice
            number_of_dice: 3
            sides: 4
          op: '+'
          right: 5
  - script: 'name = value'
    result:
      _class: Assignment
      target: name
      value: 'value'
  - script: 'name = {1d6}->top(2)'
    result:
      _class: Assignment
      target: name
      value:
        _class: Modify
        subject:
          _class: Reduce
          value:
            _class: Dice
            number_of_dice: 1
            sides: 6
        modifiers:
        - modifier: 'top'
          args: [2]
          _class: ModifierCall
  - script: 'name = {{(2d4)d6}->top(3)}'
    result:
      _class: Assignment
      target: name
      value:
        _class: Reduce
        value:
          _class: Modify
          subject:
            _class: Reduce
            value:
              _class: Dice
              number_of_dice:
                _class: Dice
                number_of_dice: 2
                sides: 4
              sides: 6
          modifiers:
          - modifier: 'top'
            args: [3]
            _class: ModifierCall
