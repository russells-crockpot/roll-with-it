name: modifiers
categories:
- modifiers
tests:

- name: modifier_defs
  categories:
  - modifier_defs
  tests:
  - script: 'name<-:[]'
    result:
      _class: ModifierDef
      target:
        _class: Reference
        value: 'name'
      parameters: []
      definition: []
  - script: 'name<-[]'
    result:
      _class: ModifierDef
      target:
        _class: Reference
        value: 'name'
      parameters: []
      definition: []
  - script: 'name<-:[]'
    result:
      _class: ModifierDef
      target:
        _class: Reference
        value: 'name'
      parameters: []
      definition: []
  - script: 'name <- : [1]'
    result:
      _class: ModifierDef
      target:
        _class: Reference
        value: 'name'
      parameters: []
      definition: [1]
  - script: 'name <- : 1'
    result:
      _class: ModifierDef
      target:
        _class: Reference
        value: 'name'
      parameters: []
      definition:
        _class: Assignment
        target:
          _class: SpecialReference
          value: SUBJECT
        value: 1
  - script: 'name<-:1d6'
    result:
      _class: ModifierDef
      target:
        _class: Reference
        value: name
      parameters: []
      definition:
        _class: Assignment
        target:
          _class: SpecialReference
          value: SUBJECT
        value:
          _class: NewDice
          number_of_dice: 1
          sides: 6
  - script: 'name<-param[]'
    result:
      _class: ModifierDef
      target:
        _class: Reference
        value: 'name'
      parameters: ['param']
      definition: []
  - script: 'name<-param:[]'
    result:
      _class: ModifierDef
      target:
        _class: Reference
        value: 'name'
      parameters: ['param']
      definition: []
  - script: 'name<-param1 [1 + a]'
    result:
      _class: ModifierDef
      target:
        _class: Reference
        value: 'name'
      parameters: ['param1']
      definition:
      - _class: BinaryOp
        left: 1
        op:
          _class: TwoSidedOperator
          value: ADD
        right:
          _class: Reference
          value: a
  - script: 'name<-param1: [? + 2]'
    result:
      _class: ModifierDef
      target:
        _class: Reference
        value: 'name'
      parameters: ['param1']
      definition:
      - _class: BinaryOp
        left:
          _class: SpecialReference
          value: SUBJECT
        op:
          _class: TwoSidedOperator
          value: ADD
        right: 2
  - script: 'name<-param1, param2: param1 + param2'
    result:
      _class: ModifierDef
      target:
        _class: Reference
        value: 'name'
      parameters:
      - 'param1'
      - 'param2'
      definition:
        _class: Assignment
        target:
          _class: SpecialReference
          value: SUBJECT
        value:
          _class: BinaryOp
          left:
            _class: Reference
            value: 'param1'
          op:
            _class: TwoSidedOperator
            value: ADD
          right:
            _class: Reference
            value: 'param2'
  - script: 'name<-param1, param2 [param1 + param2]'
    result:
      _class: ModifierDef
      target:
        _class: Reference
        value: 'name'
      parameters:
      - 'param1'
      - 'param2'
      definition:
      - _class: BinaryOp
        left:
          _class: Reference
          value: 'param1'
        op:
          _class: TwoSidedOperator
          value: ADD
        right:
          _class: Reference
          value: 'param2'
  - script: 'name<-param1, param2 [ ?.{1} = 3 ]'
    result:
      _class: ModifierDef
      target:
        _class: Reference
        value: 'name'
      parameters:
      - 'param1'
      - 'param2'
      definition:
      - _class: Assignment
        target:
          _class: Access
          accessing:
            _class: SpecialReference
            value: SUBJECT
          accessors:
          - _class: Reduce
            value: 1
        value: 3
  - script: |
      name <- param1, param2 [
            param1 + param2
            ?.{1} = 3
      ]
    result:
      _class: ModifierDef
      target:
        _class: Reference
        value: 'name'
      parameters:
      - 'param1'
      - 'param2'
      definition:
      - _class: BinaryOp
        left:
          _class: Reference
          value: 'param1'
        op:
          _class: TwoSidedOperator
          value: ADD
        right:
          _class: Reference
          value: 'param2'
      - _class: Assignment
        target:
          _class: Access
          accessing:
            _class: SpecialReference
            value: SUBJECT
          accessors:
          - _class: Reduce
            value: 1
        value: 3

- name: modifier_calls
  categories:
  - modifier_calls
  tests:
  - script: '?->top'
    result:
      _class: Modify
      subject:
        _class: SpecialReference
        value: 'SUBJECT'
      modifiers:
      - _class: ModifierCall
        modifier:
          _class: Reference
          value: 'top'
        args: []
  - script: 'test->top(2)'
    result:
      _class: Modify
      subject:
        _class: Reference
        value: 'test'
      modifiers:
      - _class: ModifierCall
        modifier:
          _class: Reference
          value: 'top'
        args: [2]
  - script: '1d6->bottom'
    result:
      _class: Modify
      subject:
        _class: NewDice
        number_of_dice: 1
        sides: 6
      modifiers:
      - _class: ModifierCall
        modifier:
          _class: Reference
          value: 'bottom'
        args: []
  - script: '1d6->bottom(2d3)'
    result:
      _class: Modify
      subject:
        _class: NewDice
        number_of_dice: 1
        sides: 6
      modifiers:
      - _class: ModifierCall
        modifier:
          _class: Reference
          value: 'bottom'
        args:
        - number_of_dice: 2
          sides: 3
  - script: '1d6->bottom(2d3)->top'
    result:
      _class: Modify
      subject:
        _class: NewDice
        number_of_dice: 1
        sides: 6
      modifiers:
      - _class: ModifierCall
        modifier:
          _class: Reference
          value: 'bottom'
        args:
        - number_of_dice: 2
          _class: NewDice
          sides: 3
      - _class: ModifierCall
        modifier:
          _class: Reference
          value: 'top'
        args: []
  - script: '1d6->bottom(2d3)->top(1)'
    result:
      _class: Modify
      subject:
        _class: NewDice
        number_of_dice: 1
        sides: 6
      modifiers:
      - _class: ModifierCall
        modifier:
          _class: Reference
          value: 'bottom'
        args:
        - number_of_dice: 2
          sides: 3
          _class: NewDice
      - _class: ModifierCall
        modifier:
          _class: Reference
          value: 'top'
        args: [1]
  - script: '1d6->bottom(2d3)->top(1, 4d5 - 6, 7)'
    result:
      _class: Modify
      subject:
        _class: NewDice
        number_of_dice: 1
        sides: 6
      modifiers:
      - _class: ModifierCall
        modifier:
          _class: Reference
          value: 'bottom'
        args:
        - number_of_dice: 2
          sides: 3
          _class: NewDice
      - _class: ModifierCall
        modifier:
          _class: Reference
          value: 'top'
        args:
        - 1
        - left:
            number_of_dice: 4
            sides: 5
            _class: NewDice
          op:
            _class: TwoSidedOperator
            value: SUBTRACT
          right: 6
          _class: BinaryOp
        - 7

- name: leave
  categories:
  - leave
  tests:
  - script: 'leave'
    result:
      _class: Leave
